# The documentation for the specification for this file is avaliable at:
# https://github.com/compose-spec/compose-spec/blob/master/spec.md
services:
  tracker:
    build:
      dockerfile: Dockerfile.tracker
    ports:
      - "6969:6969"

    networks:
      - frontend
      - torrenting

  publish:
    # This creates the torrents.
    build:
      dockerfile: Dockerfile.publish
      context: publish

    volumes:
      # Populate sources with files that you wish to create torrents of.
      - ./sources:/sources

      - torrents:/torrents

    environment:
      ANNOUNCE_URL: http://tracker:6969/announce

    # This does not need a network as it doesn't communicate with the tracker.
    network_mode: none

  seeder:
    # This creates a container that seeds the torrents.
    build:
      dockerfile: Dockerfile.client
      # Use seeder-webui for interactive testing/development. It has flood
      # installed in it. It just needs to be started within the container.
      #target: seeder-webui
      target: seeder

    # When seeder-webui is used then the UI port needs to be open.
    #ports:
    #  - "3000:3000"

    depends_on:
      - tracker

    volumes:
      # This is where torrents will be downloaded to and in the case of seeding
      # where they are.
      - ./sources:/root/rtorrent/download

      # This is where rtorrent will watch for new torrents to seed.
      - torrents:/root/rtorrent/watch/start

    networks:
      - torrenting

  seeder-secondary:
    # This creates a second container that seeds the torrents.
    build:
      dockerfile: Dockerfile.client
      target: seeder

    depends_on:
      - tracker

    volumes:
      # This is where torrents will be downloaded to and in the case of seeding
      # where they are.
      - ./sources:/root/rtorrent/download

      # This is where rtorrent will watch for new torrents to seed.
      - torrents:/root/rtorrent/watch/start

    networks:
      - torrenting

  seeder-ui:
    # This creates a container with a web-ui for interacting with the seeder
    image: jesec/flood

    profiles:
      - debug

    ports:
      - "3000:3000"

    depends_on:
      - seeder

    volumes:
      # This allows the files to be downloaded from Flood interface for the
      # more complete experience.
      - ./sources:/root/rtorrent/download

    networks:
      - frontend # Talk to the host
      - torrenting  # Talk to the torrent clients

  leachers:
    # This only has the torrents and no sources.
    build:
      dockerfile: Dockerfile.client
      target: client
    volumes:
      - torrents:/root/rtorrent/watch/start
    deploy:
      mode: replicated
      replicas: 10

    networks:
      - torrenting

# dockerfile_inline can be used to include the dockerfile inline.

volumes:
  torrents:
    # This volume contains the list of all available torrents.

networks:
  frontend:
    # This network currently has access to the Internet but doesn't need it.
    # It simply needs to allow the host to access it to be able to query either
    # the tracker (not really required) or the seeder-ui (Flood).

  torrenting:
    # This network does not have access to the outside world. This meants it
    # can't acccidently use DHT to pull the files from another machine on the
    # Internet.
    internal: true
