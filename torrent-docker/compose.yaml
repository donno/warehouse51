# The documetnation for the specification for this file is avaliable at:
# https://github.com/compose-spec/compose-spec/blob/master/spec.md
services:
  tracker:
    build:
      dockerfile: Dockerfile.tracker
    ports:
      - "6969:6969"

  publish:
    # This creates the torrents.
    build:
      dockerfile: Dockerfile.publish
      context: publish

    volumes:
      # Populate sources with files that you wish to create torrents of.
      - ./sources:/sources

      - torrents:/torrents

    environment:
      ANNOUNCE_URL: http://tracker:6969/announce

  seeder:
    # This creates a container that seeds the torrents.
    build:
      dockerfile: Dockerfile.client
      # Use seeder-webui for interactive testing/development.
      #target: seeder
      target: seeder-webui

    ports:
      - "3000:3000"

    depends_on:
      - tracker

    volumes:
      # This is where torrents will be downloaded to and in the case of seeding
      # where they are.
      - ./sources:/root/rtorrent/download

      # This is where rtorrent will watch for new torrents to seed.
      - torrents:/root/rtorrent/watch/start

  seeder-secondary:
    # This creates a second container that seeds the torrents.
    build:
      dockerfile: Dockerfile.client
      target: seeder

    depends_on:
      - tracker

    volumes:
      # This is where torrents will be downloaded to and in the case of seeding
      # where they are.
      - ./sources:/root/rtorrent/download

      # This is where rtorrent will watch for new torrents to seed.
      - torrents:/root/rtorrent/watch/start

  # This doesn't currently work.
  seeder-ui:
    # This creates a container with a web-ui for interacting with the seeder
    image: jesec/flood

    profiles:
      - debug

    command:
      - --auth=none
      - --rthost seeder
      - --rtport 5000

    ports:
      - "3000:3000"

    depends_on:
      - seeder

  #leachers:
    # This only has the torrents and no sources.
    # build:
    #   dockerfile: dockerfile
    #   target: client
    # volumes:
    #   # This could be shared volume.
    #   - torrents:/torrents

# dockerfile_inline can be used to include the dockerfile inline.

volumes:
  torrents:
    # This volume contains the list of all available torrents.


# TODO: Create a seperate network which doesn't have access to the host's
# network or the internet.
# networks:
#   torrenting:
